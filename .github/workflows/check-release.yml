name: Check Release
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

permissions:
  contents:
    write

jobs:
  check_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: "x64"

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('py/jupyterlite/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upgrade packaging dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel jupyter-packaging~=0.10 --user
          python -m pip install -r requirements-docs.txt -r requirements-lint.txt -r requirements-build.txt

      - name: Install Dependencies
        run: |
          doit

      # - name: Configure Version Spec
      #   id: version-spec
      #   if: ${{ matrix.group == 'check_release' }}
      #   run: |
      #     set -eux
      #     version=$(python setup.py --version)
      #     if [[ $version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      #       version_spec=patch
      #     else
      #       version_spec=build
      #     fi
      #     echo "::set-output name=spec::${version_spec}"

      - name: Check Release
        uses: jupyter-server/jupyter_releaser/.github/actions/check-release@v1
        # env:
        #   RH_VERSION_SPEC: ${{ steps.version-spec.outputs.spec }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
